plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

ext {
    seleniumJavaVersion = '4.14.1'
    seleniumJupiterVersion = '5.0.1'
    webdrivermanagerVersion = '5.6.3'
    junitJupiterVersion = '5.9.1'
}

group = 'id.ac.ui.cs.advprog'
version = '0.0.1-SNAPSHOT'

java {
        sourceCompatibility = JavaVersion.VERSION_21
        toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.seleniumhq.selenium:selenium-java:${seleniumJavaVersion}"
	testImplementation "io.github.bonigarcia:selenium-jupiter:${seleniumJupiterVersion}"
	testImplementation "io.github.bonigarcia:webdrivermanager:${webdrivermanagerVersion}"
	testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
}

task unitTest(type: Test) {
    description = 'Run unit tests.'
    group = 'verification'

    exclude '*FunctionalTest'
}

task functionalTest(type: Test) {
    description = 'Run functional tests.'
    group = 'verification'

    include '*FunctionalTest'
}

tasks.withType(Test) {
    useJUnitPlatform()
}

test {
    filter {
        excludeTestsMatching "*FunctionalTest"
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}